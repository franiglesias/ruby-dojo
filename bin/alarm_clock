#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/alarm_clock/domain/display'
require_relative '../lib/alarm_clock/domain/sound'
require_relative '../lib/alarm_clock/infrastructure/language/spanish/spanish'
require_relative '../lib/alarm_clock/infrastructure/language/spanish/spanish_language'
require_relative '../lib/alarm_clock/infrastructure/language/english/english'
require_relative '../lib/alarm_clock/infrastructure/language/english/english_language'
require_relative '../lib/alarm_clock/infrastructure/bus/resolver'
require_relative '../lib/alarm_clock/infrastructure/bus/command_bus'
require_relative '../lib/alarm_clock/infrastructure/bus/command_logger_middleware'
require_relative '../lib/alarm_clock/infrastructure/bus/error_logger_middleware'
require_relative '../lib/alarm_clock/application/good_morning_command'
require_relative '../lib/alarm_clock/application/good_night_command'
require_relative '../lib/alarm_clock/application/play_alarm_command'
require_relative '../lib/alarm_clock/application/play_beep_command'
require_relative '../lib/alarm_clock/application/show_time_command'
require_relative '../lib/alarm_clock/alarm_clock'

display = Display.new
sound = Sound.new

language_option = 'english'
display_option = 'standard'

language = case language_option
           when 'spanish'
             SpanishLanguage.new(Spanish.new)
           when 'english'
             EnglishLanguage.new(English.new)
           end

show_time_executor = case display_option
                     when 'standard'
                       ShowTimeHandler.new(display)
                     when 'emoji'
                       ShowTimeHandler.new(display)
                     end

resolver = Resolver.new
resolver.register('GoodMorningCommand', GoodMorningHandler.new(display, language))
resolver.register('GoodNightCommand', GoodNightHandler.new(display, language))
resolver.register('PlayAlarmCommand', PlayAlarmHandler.new(sound))
resolver.register('PlayBeepCommand', PlayBeepHandler.new(sound))
resolver.register('ShowTimeCommand', PlayBeepHandler.new(sound))

logger = CommandLoggerMiddleware.new
errors = ErrorLoggerMiddleware.new

command_bus = CommandBus.new(resolver, errors)

clock = AlarmClock.new(command_bus, 7, 22)
clock.run
